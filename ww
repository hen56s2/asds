local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local WEBHOOK_CONFIG = _G.WEBHOOK_CONFIG or {
	url = "",
	everyone = false
}

local function sendWebhookAlert()
	if not WEBHOOK_CONFIG.url or WEBHOOK_CONFIG.url == "" then return end

	local rifts = workspace:FindFirstChild("Rendered") and workspace.Rendered:FindFirstChild("Rifts")
	if not rifts then return end

	local egg = rifts:FindFirstChild("hell-egg")
	if not egg then return end

	local jobId = game.JobId
	local placeId = game.PlaceId
	local playerCount = #Players:GetPlayers()
	local maxPlayers = Players.MaxPlayers
	local isPrivate = game.PrivateServerId ~= ""

	local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance("..placeId..", '"..jobId.."', game.Players.LocalPlayer)"
	local joinLink = "https://roblox.com/games/start?placeId="..placeId.."&gameInstanceId="..jobId

	local content = WEBHOOK_CONFIG.everyone and "@everyone\n" or ""
	content = content .. "**ðŸ¥š bruh-egg found!**\n\n"
	content = content .. "**ðŸ‘¥ Players:** "..playerCount.."/"..maxPlayers.."\n"
	content = content .. "**ðŸ”’ Server Type:** "..(isPrivate and "Private" or "Public").."\n"
	content = content .. "**[ðŸ”— Click to Join]("..joinLink..")**\n"
	content = content .. "```lua\n"..joinScript.."\n```"

	local payload = {
		content = content
	}

	local success, err = pcall(function()
		local req = (syn and syn.request) or (http and http.request) or (http_request) or (request)
		if req then
			req({
				Url = WEBHOOK_CONFIG.url,
				Method = "POST",
				Headers = {
					["Content-Type"] = "application/json"
				},
				Body = HttpService:JSONEncode(payload)
			})
		end
	end)

	if not success then
		warn("[Webhook Error]:", err)
	end
end

sendWebhookAlert()
